<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>com.randomnoun.build</groupId>
    <artifactId>parent-pom</artifactId>
    <version>1.22</version>
    <packaging>pom</packaging>
    
    <name>parent-pom</name>
    <description>Parent POM of randomnoun projects</description>
	<url>http://code.randomnoun.com/parent-pom/index.html</url>
	<inceptionYear>2010</inceptionYear>
    
    <!--
    1.21 was the last version that targetted jdk1.7 and log4j 1
      
    Hello me.
    
    Conventions for the use of this file are that only external dependencies
    (i.e. those not built through the mvn/bamboo/vmaint process) go in here.
    
    At least this way I won't (hopefully) have 15 different versions of log4j 
    in each app server.
    
    So, anyway, don't put any SNAPSHOT versions in here, and don't put any
    dependencies that are built through gitlab / bamboo.

     -->
    <dependencyManagement>
		<dependencies>
	
			<!-- default version numbers -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<scope>test</scope>
				<version>4.12</version>
			</dependency>
			<dependency>
	            <groupId>org.apache.logging.log4j</groupId>
	            <artifactId>log4j-core</artifactId>
	            <version>2.14.0</version><!--  2.12.1 was last version to support jdk7, latest is 2.14.0 -->
	            <optional>true</optional>
	        </dependency>
	
	        <!-- keep the log4j 1 interfaces as some downstream projects still use log4j 1 appenders -->
	        <dependency>
	        	<groupId>org.apache.logging.log4j</groupId>
	            <artifactId>log4j-1.2-api</artifactId>
	            <version>2.14.0</version><!--  2.12.1 was last version to support jdk7, latest is 2.14.0 -->
	            <optional>true</optional>
	        </dependency>

			<dependency>
	       		<groupId>xml-apis</groupId>
	       		<artifactId>xml-apis</artifactId>
	       		<version>1.4.01</version>
	       		<optional>true</optional><!--  conflicts with packages in jdk 11 -->
	        </dependency>
	        
	        <dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>2.5</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
	        	<groupId>javax.servlet.jsp</groupId>
	        	<artifactId>jsp-api</artifactId>
	        	<version>2.2</version>
	        	<scope>provided</scope>
	        </dependency>
	        

			<!-- http://stackoverflow.com/questions/2237537/which-maven-dependencies-to-include-for-spring-3-0 -->
			<!-- so now the spring JAR has now been replaced with 14 easy-to-use spring jarlets -->
			<!-- Core utilities used by other modules.
			    Define this if you use Spring Utility APIs 
			    (org.springframework.core.*/org.springframework.util.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-core</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Expression Language (depends on spring-core)
			    Define this if you use Spring Expression APIs 
			    (org.springframework.expression.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-expression</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Bean Factory and JavaBeans utilities (depends on spring-core)
			    Define this if you use Spring Bean APIs 
			    (org.springframework.beans.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-beans</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Aspect Oriented Programming (AOP) Framework 
			    (depends on spring-core, spring-beans)
			    Define this if you use Spring AOP APIs 
			    (org.springframework.aop.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-aop</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Application Context 
			    (depends on spring-core, spring-expression, spring-aop, spring-beans)
			    This is the central artifact for Spring's Dependency Injection Container
			    and is generally always defined-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-context</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Various Application Context utilities, including EhCache, JavaMail, Quartz, 
			    and Freemarker integration
			    Define this if you need any of these integrations-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-context-support</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Transaction Management Abstraction 
			    (depends on spring-core, spring-beans, spring-aop, spring-context)
			    Define this if you use Spring Transactions or DAO Exception Hierarchy
			    (org.springframework.transaction.*/org.springframework.dao.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-tx</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- JDBC Data Access Library 
			    (depends on spring-core, spring-beans, spring-context, spring-tx)
			    Define this if you use Spring's JdbcTemplate API 
			    (org.springframework.jdbc.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-jdbc</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and iBatis.
			    (depends on spring-core, spring-beans, spring-context, spring-tx)
			    Define this if you need ORM (org.springframework.orm.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-orm</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, 
			    Castor, XStream, and XML Beans.
			    (depends on spring-core, spring-beans, spring-context)
			    Define this if you need OXM (org.springframework.oxm.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-oxm</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Web application development utilities applicable to both Servlet and 
			    Portlet Environments 
			    (depends on spring-core, spring-beans, spring-context)
			    Define this if you use Spring MVC, or wish to use Struts, JSF, or another
			    web framework with Spring (org.springframework.web.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-web</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Spring MVC for Servlet Environments 
			    (depends on spring-core, spring-beans, spring-context, spring-web)
			    Define this if you use Spring MVC with a Servlet Container such as 
			    Apache Tomcat (org.springframework.web.servlet.*)-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-webmvc</artifactId>
			    <version>${org.springframework.version}</version>
			</dependency>
			<!-- Support for testing Spring applications with tools such as JUnit and TestNG
			    This artifact is generally always defined with a 'test' scope for the 
			    integration testing framework and unit testing stubs-->
			<dependency>
			    <groupId>org.springframework</groupId>
			    <artifactId>spring-test</artifactId>
			    <version>${org.springframework.version}</version>
			    <scope>test</scope>
			</dependency>
						
			<dependency>
				<groupId>commons-httpclient</groupId>
				<artifactId>commons-httpclient</artifactId>
				<version>3.1</version>
				<exclusions>
					<exclusion>
						<!-- should be at test scope, but included at compile scope -->
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			

			<dependency>
				<groupId>org.ccil.cowan.tagsoup</groupId>
				<artifactId>tagsoup</artifactId>
				<version>1.2.1</version><!-- was 1.2 -->
			</dependency>
			<dependency>
				<groupId>xalan</groupId>
				<artifactId>xalan</artifactId>
				<version>2.7.2</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
			</dependency>
			<dependency>
				<groupId>xerces</groupId>
				<artifactId>xercesImpl</artifactId>
				<version>2.12.0</version>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
			</dependency>
			
			<dependency>
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>1.4.1</version>
			</dependency>
			
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>4.2.2</version><!--  was 3.5.1 -->
			</dependency>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna-platform</artifactId>
				<version>4.2.2</version><!--  was net.java.dev.jna:platform:3.5.1 -->
			</dependency>
			
			<dependency>
           		<groupId>org.mariadb.jdbc</groupId>
            	<artifactId>mariadb-java-client</artifactId>
           		<version>1.8.0</version>
				<scope>test</scope>
       	 	</dependency>
			
			<dependency>
				<groupId>commons-dbcp</groupId>
				<artifactId>commons-dbcp</artifactId>
				<version>1.4</version>
				<type>jar</type>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>com.mchange</groupId>
				<artifactId>c3p0</artifactId>
				<version>0.9.5.4</version><!--  was 0.9.5-pre10 -->
				<type>jar</type>
				<optional>true</optional>
			</dependency>
			
			
			
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.3.2</version><!--  was 1.2.2 -->
				<type>jar</type>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.5</version><!--  was 1.4 -->
				<type>jar</type>
				<scope>compile</scope>
				<optional>true</optional>
			</dependency>
			
	
			
		</dependencies>
	
	</dependencyManagement>
    
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <profiles>
	    <profile>
			  <id>only-eclipse</id>
			  <activation>
			    <property>
			      <name>m2e.version</name>
			    </property>
			  </activation>
			  <build>
					<!-- move m2e pluginManagement to settings.xml ? -->        
				    <pluginManagement>
						<plugins>
							<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
							<plugin>
								<groupId>org.eclipse.m2e</groupId>
								<artifactId>lifecycle-mapping</artifactId>
								<version>1.0.0</version>
								<configuration>
									<lifecycleMappingMetadata>
										<pluginExecutions>
											<pluginExecution>
												<pluginExecutionFilter>
													<groupId>
														org.codehaus.mojo
													</groupId>
													<artifactId>
														javacc-maven-plugin
													</artifactId>
													<versionRange>
														[2.5,)
													</versionRange>
													<goals>
														<goal>jtb-javacc</goal>
													</goals>
												</pluginExecutionFilter>
												<action>
													<ignore />
												</action>
											</pluginExecution>
										</pluginExecutions>
									</lifecycleMappingMetadata>
								</configuration>
							</plugin>
						</plugins>
					</pluginManagement>			  
			  </build>
	    </profile>
    </profiles>
		  
	<scm>
		<connection>scm:git:http://gitlab.dev.randomnoun/randomnoun/parent-pom.git</connection>
		<developerConnection>scm:git:http://gitlab.dev.randomnoun/randomnoun/parent-pom.git</developerConnection>
		<url>http://gitlab.dev.randomnoun/randomnoun/parent-pom</url>
  	  <tag>parent-pom-1.22</tag>
  </scm>
    <licenses>
		<license>
			<name>Simplified BSD License</name>
			<url>http://www.randomnoun.com/licences/bsd-simplified.txt</url>
			<distribution>repo</distribution>
			<comments>Simplified BSD License (BSD 2-clause license).</comments>
		</license>
	</licenses>
	<organization>
		<name>randomnoun</name>
		<url>http://www.randomnoun.com</url>
	</organization>	
	<developers>
		<developer>
			<id>knoxg</id>
			<name>Greg Knox</name>
			<email>knoxg@randomnoun.com</email>
			<organization>randomnoun</organization>
			<organizationUrl>http://www.randomnoun.com</organizationUrl>
			<roles>
				<role>Software Gazelle</role>
			</roles>
			<timezone>+10</timezone>
			<properties>
				<picUrl>http://www.gravatar.com/avatar/10b6f00fa8d70d6f4e042558a9433086.jpg?s=32</picUrl>
			</properties>
		</developer>
	</developers>
	
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>randomnoun releases</name>
            <url>http://nexus2.dev.randomnoun/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>randomnoun snapshots</name>
            <url>http://nexus2.dev.randomnoun/nexus/content/repositories/snapshots/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <targetJdk>11</targetJdk>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>11</jdk.version>
        <!-- targetJdk prop required for PMD (even though it has its own targetJdk config element) -->
        <targetJdk>11</targetJdk>
        <org.springframework.version>5.3.1</org.springframework.version><!--  was 4.3.20.RELEASE -->
    </properties>


</project>